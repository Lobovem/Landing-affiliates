/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  font-weight:bold;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/TTNorms-Bold.woff2") format("woff2");
}
@font-face{
  font-family:"TT Norms";
  font-weight:500;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/TTNorms-Medium.woff2") format("woff2");
}
@font-face{
  font-family:"TT Norms";
  font-weight:normal;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/TTNorms-Regular.woff2") format("woff2");
}
.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"Inter", sans-serif;
  font-size:16px;
  font-weight:normal;
  font-style:normal;
}

a{
  text-decoration:none;
  color:#000000;
}

h1,
h2,
h3,
h4,
h5,
h6{
  margin:0;
  padding:0;
}

.layout__large{
  width:min(100% - 200px, 1720px);
  margin-inline:auto;
}
.layout__main{
  width:min(100% - 40px, 1290px);
  margin-inline:auto;
}

.button{
  font-family:"Inter";
  font-style:normal;
}
.button__main{
  display:flex;
  align-items:center;
  justify-content:center;
  cursor:pointer;
  width:131px;
  height:41px;
  font-weight:700;
  font-size:14px;
  line-height:17px;
  text-align:center;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#ffffff;
  background:#A89C86;
}
.button__first{
  display:flex;
  justify-content:center;
  align-items:center;
  cursor:pointer;
  width:300px;
  min-height:72px;
  font-weight:700;
  font-size:18px;
  line-height:22px;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#000000;
  background:linear-gradient(90deg, #FECE71 0%, #FFAF14 100%);
}
.button__second{
  display:block;
  cursor:pointer;
  width:155px;
  min-height:45px;
  line-height:17px;
  text-align:center;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#000000;
}

.header{
  position:relative;
  overflow-x:hidden;
  min-height:750px;
}
.header__wrap{
  position:relative;
  z-index:1;
  display:flex;
  gap:30px;
  padding-top:20px;
  align-items:center;
  justify-content:space-between;
}
.header__navbar-box{
  display:flex;
  gap:58px;
}
.header__logo{
  max-height:44px;
}
.header__banner{
  display:flex;
  justify-content:space-between;
}

.navbar__list{
  margin:0;
  padding:0;
  list-style:none;
  display:flex;
}
.navbar__link{
  display:block;
  padding:15px;
  font-weight:500;
  font-size:14px;
  line-height:17px;
  text-transform:capitalize;
  color:#171717;
}

.navbar__burger{
  position:relative;
  width:20px;
  height:30px;
  top:8px;
  cursor:pointer;
}
.navbar__burger span{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:6%;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  background-color:#000000;
}
.navbar__burger span:nth-of-type(1){
  top:0;
}
.navbar__burger span:nth-of-type(2){
  top:6px;
}
.navbar__burger span:nth-of-type(3){
  top:12px;
}
.navbar__burger.active{
  right:0;
  top:10px;
}
.navbar__burger.active span{
  z-index:10;
  background-color:white;
}
.navbar__burger.active span:nth-of-type(1){
  top:6px;
  transform:rotate(135deg);
}
.navbar__burger.active span:nth-of-type(2){
  left:-40px;
  opacity:0;
}
.navbar__burger.active span:nth-of-type(3){
  top:6px;
  transform:rotate(-135deg);
}

.actions{
  display:flex;
}
.actions__access{
  display:flex;
  align-items:center;
  gap:45px;
}
.actions__access-link{
  font-weight:700;
  font-size:14px;
  line-height:17px;
  letter-spacing:0.05em;
  text-transform:uppercase;
  color:#171717;
  display:flex;
  align-items:center;
  justify-content:center;
}

.banner__text-box{
  padding-top:206px;
}
.banner__title{
  font-weight:400;
  font-size:74px;
  line-height:120%;
  letter-spacing:0.05em;
  color:#000917;
  margin-bottom:24px;
}
.banner__foto-box{
  position:relative;
  padding-top:40px;
  padding-right:50px;
}
.banner__decor-header{
  position:absolute;
  z-index:-1;
  width:1060px;
  height:1060px;
  right:-200px;
  top:-380px;
  border-radius:650px;
  background:#FFEFD0;
}
@media (min-width: 1200px){
  .navbar__list{
    gap:20px;
  }
  .navbar__link{
    text-align:center;
  }
  .navbar__burger{
    display:none;
  }
}
@media (max-width: 1719.8px){
  .button__first{
    width:268px;
    min-height:62px;
    font-size:16px;
    line-height:19px;
  }
  .header__wrap{
    padding-top:15px;
  }
  .header__navbar-box{
    gap:38px;
  }
  .navbar__list{
    gap:15px;
  }
  .actions__access{
    gap:40px;
  }
  .banner__text-box{
    padding-top:184px;
  }
  .banner__title{
    font-size:54px;
    line-height:120%;
    color:#171717;
    max-width:600px;
  }
  .banner__foto-box{
    padding-right:10px;
    padding-top:128px;
  }
  .banner__decor-header{
    width:745px;
    height:745px;
    right:-160px;
    top:-242px;
  }
  .banner__foto{
    max-width:616px;
  }
}
@media (max-width: 1199.8px){
  .layout__large{
    width:min(100% - 80px, 1720px);
  }
  .button__main{
    width:105px;
    height:33px;
    font-size:12px;
    line-height:15px;
  }
  .header__wrap{
    padding-top:10px;
  }
  .navbar__list{
    flex-direction:column;
  }
  .navbar__link{
    color:white;
  }
  .menu__body{
    position:fixed;
    top:0;
    left:0;
    width:100%;
    height:100vh;
    background-color:rgba(0, 0, 0, 0.9);
    transition:all 0.3s ease 0s;
    transform:translate(100%, 0);
  }
  .menu__body.active{
    transform:translate(0%, 0);
  }
  .actions__access{
    gap:30px;
  }
  .actions__access-link{
    font-size:12px;
    line-height:15px;
    color:#000917;
  }
  .banner__text-box{
    padding-top:94px;
  }
  .banner__title{
    font-size:40px;
    line-height:120%;
    max-width:402px;
  }
  .banner__foto-box{
    padding-top:50px;
  }
  .banner__decor-header{
    right:-340px;
    top:-380px;
  }
  .banner__foto{
    max-width:426px;
  }
}
@media (max-width: 799.8px){
  .layout__large{
    width:min(100% - 40px, 1720px);
  }
  .button__main{
    width:85px;
    height:27px;
    font-size:10px;
    line-height:12px;
    margin-right:5px;
  }
  .button__first{
    width:222px;
    min-height:45px;
  }
  .header__logo{
    max-height:33px;
  }
  .actions__access{
    gap:25px;
  }
  .actions__access-link{
    font-size:10px;
    line-height:12px;
  }
  .banner__text-box{
    padding-top:70px;
  }
  .banner__title{
    font-size:32px;
    line-height:120%;
    max-width:360px;
  }
  .banner__foto-box{
    margin-right:-84px;
    padding-right:0;
  }
  .banner__decor-header{
    width:352px;
    height:352px;
    right:0;
    top:-108px;
  }
  .banner__foto{
    max-width:300px;
  }
}
@media (max-width: 575.8px){
  .header__banner{
    flex-direction:column;
    align-items:center;
  }
  .banner__text-box{
    padding-top:46px;
  }
  .banner__title{
    font-size:24px;
    line-height:120%;
    text-align:center;
    margin-right:auto;
    margin-left:auto;
    max-width:270px;
  }
  .banner__button{
    margin-right:auto;
    margin-left:auto;
  }
  .banner__decor-header{
    right:-320px;
    top:-270px;
  }
  .banner__foto{
    display:none;
  }
}
@media (max-width: 479.8px){
  .navbar__burger span{
    height:6%;
  }
  .navbar__burger span:nth-of-type(2){
    top:6px;
  }
  .navbar__burger span:nth-of-type(3){
    top:12px;
  }
}
@media (max-width: 419.8px){
  .layout__large{
    width:min(100% - 20px, 1720px);
  }
  .button__main{
    width:71px;
    height:23px;
    font-size:9px;
    line-height:11px;
  }
  .header__wrap{
    gap:0;
  }
  .header__logo{
    max-height:25px;
  }
  .actions__access{
    gap:15px;
  }
  .actions__access-link{
    font-size:9px;
    line-height:11px;
  }
  .banner__title{
    margin-bottom:14px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */